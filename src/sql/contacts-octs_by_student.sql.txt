WITH 
  OriginalContactAssoc AS (
    SELECT
      sca.StudentDcid AS StudentDcid,
      sca.PersonId AS PersonId,
      ocm.OriginalContactType AS OriginalContactType,
      csrel.Code AS contactRelationshipType, 
      scd.IsCustodial AS contactIsCustodialFlg,
      scd.IsEmergency AS contactIsEmergencyFlg,
      scd.LivesWithFlg AS contactLivesWithFlg,
      scd.ReceivesMailFlg AS contactReceivesMailFlg,
      scd.SchoolPickupFlg AS contactSchoolPickupFlg
    
    FROM StudentContactAssoc sca

    JOIN OriginalContactMap ocm ON sca.StudentContactAssocid = ocm.StudentContactAssocId
    
    JOIN StudentContactDetail scd
      ON sca.StudentContactAssocId = scd.StudentContactAssocId
     AND scd.IsActive = 1
     AND (scd.EndDate IS NULL OR scd.EndDate > SYSDATE)
     AND (scd.StartDate IS NULL OR scd.StartDate <= SYSDATE)
    
    JOIN CodeSet csrel ON scd.RelationshipTypeCodeSetId = csrel.CodeSetId
  ),
  PrimPersPhonesByType AS (
    SELECT
      ppna.PersonId AS PersonId,
      ppna.PhoneTypeCodeSetID AS PhoneTypeCodeSetID,
      ppna.IsPreferred AS IsPreferred,
      ppna.PhoneNumberPriorityOrder AS PhoneNumberPriorityOrder,
      ppna.PhoneNumberAsEntered AS PhoneNumberAsEntered,
      ROW_NUMBER() OVER (PARTITION BY ppna.PersonId, ppna.PhoneTypeCodeSetID
                             ORDER BY ppna.IsPreferred DESC,
                                      ppna.PhoneNumberPriorityOrder ASC,
                                      ppna.PhoneNumberAsEntered) AS PhonePriByType
    
    FROM PersonPhoneNumberAssoc ppna

    JOIN PhoneNumber pn ON ppna.PhoneNumberId = pn.PhoneNumberID
  ),
  PrimPersEmailAddr AS (
    SELECT
      peaa.PersonId AS PersonId,
      peaa.EmailTypeCodeSetID AS EmailTypeCodeSetID,
      peaa.IsPrimaryEmailAddress AS IsPrimaryEmailAddress,
      peaa.EmailAddressPriorityOrder AS EmailAddressPriorityOrder,
      emad.EmailAddress AS EmailAddress,
      ROW_NUMBER() OVER (PARTITION BY peaa.PersonId
                             ORDER BY peaa.IsPrimaryEmailAddress DESC,
                                      CASE
                                        WHEN cset.Code IS NULL THEN 2
                                        WHEN cset.Code LIKE '' THEN 2
                                        ELSE 1
                                      END ASC,
                                      peaa.EmailAddressPriorityOrder ASC) AS EmailPri

    FROM PersonEmailAddressAssoc peaa

    JOIN EmailAddress emad ON peaa.EmailAddressId = emad.EmailAddressId

    LEFT OUTER JOIN CodeSet cset
                 ON peaa.EmailTypeCodeSetID = cset.CodeSetID
                AND cset.Code COLLATE binary_ci LIKE 'Current'
    
    ORDER BY peaa.PersonId
  ),
  PrimPersStreetAddr As(
    SELECT
      paa.PersonId AS PersonId,
      paa.AddressTypeCodeSetID AS AddressTypeCodeSetID,
      paa.AddressPriorityOrder AS AddressPriorityOrder,
   
      pad.Street AS contactAddrStreet,
      pad.Unit AS contactAddrUnit,
      pad.LineTwo AS contactAddrLineTwo,
      pad.City AS contactAddrCity,
      csas.Code AS contactAddrState,
      pad.PostalCode as contactAddrPostalCode,
      ROW_NUMBER() OVER (PARTITION BY paa.PersonId
                             ORDER BY paa.AddressPriorityOrder ASC) AS StreetAddrPri

    FROM PersonAddressAssoc paa
    
    JOIN PersonAddress pad ON paa.PersonAddressId = pad.PersonAddressId
    JOIN CodeSet csas ON pad.StatesCodeSetID = csas.CodeSetID
    
    WHERE (paa.EndDate IS NULL OR paa.EndDate > SYSDATE)
      AND (paa.StartDate IS NULL OR paa.StartDate <= SYSDATE)
  ),
  ContactInfo AS (
    SELECT
      p.Id AS PersonId,
      p.FirstName AS contactFirstName,
      p.MiddleName AS contactMiddleName,
      p.LastName AS contactLastName,
      pppbt_home.PhoneNumberAsEntered AS HomePhoneNum,
      pppbt_mobile.PhoneNumberAsEntered AS MobilePhoneNum,
      pppbt_work.PhoneNumberAsEntered AS WorkPhoneNum,
      LOWER(cset.Code) AS emailType,
      ppea.EmailAddress as contactEmailAddr,
      ppea.EmailAddressPriorityOrder,
      ppea.IsPrimaryEmailAddress,
      LOWER(csat.Code) AS addressType,
      ppsa.contactAddrStreet AS contactAddrStreet,
      ppsa.contactAddrUnit AS contactAddrUnit,
      ppsa.contactAddrLineTwo AS contactAddrLineTwo,
      ppsa.contactAddrCity AS contactAddrCity,
      ppsa.contactAddrState AS contactAddrState,
      ppsa.contactAddrPostalCode as contactAddrPostalCode

    FROM Person p
    
    LEFT OUTER JOIN
      ( PrimPersPhonesByType pppbt_home

        INNER JOIN CodeSet cspt_home
                ON pppbt_home.PhoneTypeCodeSetID = cspt_home.CodeSetID
               AND cspt_home.Code COLLATE binary_ci LIKE 'Home'

      ) ON p.Id = pppbt_home.PersonId
       AND pppbt_home.PhonePriByType = 1

    LEFT OUTER JOIN
      ( PrimPersPhonesByType pppbt_mobile

        INNER JOIN CodeSet cspt_mobile
                ON pppbt_mobile.PhoneTypeCodeSetID = cspt_mobile.CodeSetID
               AND cspt_mobile.Code COLLATE binary_ci LIKE 'Mobile'

      ) ON p.Id = pppbt_mobile.PersonId
       AND pppbt_mobile.PhonePriByType = 1

    LEFT OUTER JOIN
      ( PrimPersPhonesByType pppbt_work

        INNER JOIN CodeSet pppbt_work
                ON pppbt_work.PhoneTypeCodeSetID = pppbt_work.CodeSetID
               AND pppbt_work.Code COLLATE binary_ci LIKE 'Work'

      ) ON p.Id = pppbt_work.PersonId
       AND pppbt_work.PhonePriByType = 1
    
    LEFT OUTER JOIN
      ( PrimPersEmailAddr ppea

        INNER JOIN CodeSet cset
                ON ppea.EmailTypeCodeSetID = cset.CodeSetID

      ) ON p.Id = ppea.PersonId
       AND ppea.EmailPri = 1

    LEFT OUTER JOIN 
      ( PrimPersStreetAddr ppsa
        
        INNER JOIN CodeSet csat
                ON ppsa.AddressTypeCodeSetID = csat.CodeSetID

      ) ON p.Id = ppsa.PersonId
       AND ppsa.StreetAddrPri = 1
  )
SELECT
  s.Dcid As studentDcid,
  s.Enroll_Status AS enrollStat,
  s.Student_Number AS studentNum,
  s.Last_Name AS lname,
  s.First_Name AS fname,
  psc.Email AS studentEmail,
  s.Gender AS gender,
  s.SchoolID AS schoolNum,
  s.Grade_Level AS gradeLvl,
  s.Home_room AS homeRm,
  s.Home_Phone AS studentHomePhone,
  s.Street AS studentAddrStreet,
  s.City AS studentAddrCity,
  s.State AS studentAddrState,
  s.Zip as studentAddrZip,
  s.Mailing_Street AS studentMailAddrStreet,
  s.Mailing_City AS studentMailAddrCity,
  s.Mailing_State AS studentMailAddrState,
  s.Mailing_Zip as studentMailAddrZip,

  oca_m1.contactRelationshipType AS MotherRelationshipType, 

  ci_m1.contactFirstName AS MotherFirstName,
  ci_m1.contactMiddleName AS MotherMiddleName,
  ci_m1.contactLastName AS MotherLastName,

  oca_m1.contactIsCustodialFlg AS MotherIsCustodialFlg,
  oca_m1.contactIsEmergencyFlg AS MotherIsEmergencyFlg,
  oca_m1.contactLivesWithFlg AS MotherLivesWithFlg,
  oca_m1.contactReceivesMailFlg AS MotherReceivesMailFlg,
  oca_m1.contactSchoolPickupFlg AS MotherSchoolPickupFlg,
 
  ci_m1.emailType AS MotherEmailAddrType,
  ci_m1.contactEmailAddr AS MotherEmailAddress,
  ci_m1.HomePhoneNum AS MotherHomePhone,
  ci_m1.MobilePhoneNum AS MotherMobilePhone,
  ci_m1.WorkPhoneNum AS MotherWorkPhone,
  ci_m1.contactAddrStreet AS MotherAddrStreet,
  ci_m1.contactAddrUnit AS MotherAddrUnit,
  ci_m1.contactAddrLineTwo AS MotherAddrLineTwo,
  ci_m1.contactAddrCity AS MotherAddrCity,
  ci_m1.contactAddrState AS MotherAddrState,
  ci_m1.contactAddrPostalCode as MotherAddrPostalCode

FROM Students s

LEFT OUTER JOIN 
  ( PSM_StudentContact psc 
  
    INNER JOIN PSM_StudentContactType psct
            ON psc.StudentContactTypeId= psct.Id 
           AND psct.Name='Self' 
  
    INNER JOIN Sync_StudentMap ssm ON psc.StudentId = ssm.StudentId
    
  ) ON s.Dcid = ssm.StudentsDcid 

LEFT OUTER JOIN
  ( OriginalContactAssoc oca_m1

    INNER JOIN  ContactInfo ci_m1 ON oca_m1.PersonId = ci_m1.PersonId

  ) ON s.Dcid = oca_m1.StudentDcid
   AND oca_m1.OriginalContactType LIKE 'mother'
