WITH 
  OriginalContactAssoc AS (
    SELECT
      sca.StudentDcid AS StudentDcid,
      sca.PersonId AS PersonId,
      ocm.OriginalContactType AS OriginalContactType,
      csrel.Code AS contactRelationshipType, 
      scd.IsCustodial AS contactIsCustodialFlg,
      scd.IsEmergency AS contactIsEmergencyFlg,
      scd.LivesWithFlg AS contactLivesWithFlg,
      scd.ReceivesMailFlg AS contactReceivesMailFlg,
      scd.SchoolPickupFlg AS contactSchoolPickupFlg
    
    FROM StudentContactAssoc sca

    JOIN OriginalContactMap ocm
      ON sca.StudentContactAssocid = ocm.StudentContactAssocId
     AND ocm.OriginalContactType IN ('mother','father','guardian',
                                     'emergency1','emergency2','emergency3')
    
    LEFT OUTER JOIN StudentContactDetail scd ON sca.StudentContactAssocId = scd.StudentContactAssocId
    LEFT OUTER JOIN CodeSet csrel ON scd.RelationshipTypeCodeSetId = csrel.CodeSetId
  ),
  PrimPersPhonesByType AS (
    SELECT
      ppna.PersonId AS PersonId,
      ppna.PhoneTypeCodeSetID AS PhoneTypeCodeSetID,
      ppna.IsPreferred AS IsPreferred,
      ppna.PhoneNumberPriorityOrder AS PhoneNumberPriorityOrder,
      ppna.PhoneNumberAsEntered AS PhoneNumberAsEntered,
      ROW_NUMBER() OVER (PARTITION BY ppna.PersonId, ppna.PhoneTypeCodeSetID
                             ORDER BY ppna.IsPreferred DESC,
                                      ppna.PhoneNumberPriorityOrder ASC,
                                      ppna.PhoneNumberAsEntered) AS PhonePriByType
    
    FROM PersonPhoneNumberAssoc ppna

    JOIN PhoneNumber pn
      ON ppna.PhoneNumberId = pn.PhoneNumberID
      
    JOIN CodeSet cspt
      ON ppna.PhoneTypeCodeSetID = cspt.CodeSetID
  ),
  ContactInfo AS (
    SELECT
      p.Id AS PersonId,
      p.FirstName AS contactFirstName,
      p.MiddleName AS contactMiddleName,
      p.LastName AS contactLastName,
      LOWER(cspt.Code) AS phoneType,
      pppbt.PhoneNumberAsEntered AS contactPhoneNum,
      pppbt.PhoneNumberPriorityOrder,
      LOWER(cset.Code) AS emailType,
      emad.EmailAddress as contactEmailAddr,
      peaa.EmailAddressPriorityOrder,
      peaa.IsPrimaryEmailAddress,
      pad.Street AS contactAddrStreet,
      pad.Unit AS contactAddrUnit,
      pad.LineTwo AS contactAddrLineTwo,
      pad.City AS contactAddrCity,
      csas.Code AS contactAddrState,
      pad.PostalCode as contactAddrPostalCode

    FROM Person p
    
    LEFT OUTER JOIN
      ( PrimPersPhonesByType pppbt

        INNER JOIN CodeSet cspt
                ON pppbt.PhoneTypeCodeSetID = cspt.CodeSetID
               AND cspt.Code COLLATE binary_ci IN ('home','mobile','work')

      ) ON p.Id = pppbt.PersonId

    LEFT OUTER JOIN PersonEmailAddressAssoc peaa ON  p.Id = peaa.PersonId
    LEFT OUTER JOIN EmailAddress emad ON peaa.EmailAddressId = emad.EmailAddressId
    LEFT OUTER JOIN CodeSet cset
      ON peaa.EmailTypeCodeSetID = cset.CodeSetID
     AND (LOWER(cset.Code) IN ('current') OR cset.Code IS NULL)

    LEFT OUTER JOIN PersonAddressAssoc paa ON  p.Id = paa.PersonId
    LEFT OUTER JOIN PersonAddress pad ON paa.PersonAddressId = pad.PersonAddressId
    LEFT OUTER JOIN CodeSet csat ON paa.AddressTypeCodeSetID = csat.CodeSetID
    LEFT OUTER JOIN CodeSet csas ON pad.StatesCodeSetID = csas.CodeSetID

    WHERE ((peaa.PersonEmailAddressAssocId IS NULL) OR
           (p.Id, peaa.EmailTypeCodeSetID, (peaa.EmailAddressPriorityOrder - (peaa.IsPrimaryEmailAddress * 100000)))
             IN (SELECT PersonId, EmailTypeCodeSetID, MIN(EmailAddressPriorityOrder - (IsPrimaryEmailAddress * 100000))
                 FROM PersonEmailAddressAssoc GROUP BY PersonId, EmailTypeCodeSetID))
      
      AND ((paa.PersonAddressAssocId IS NULL) OR
           (p.Id, paa.AddressTypeCodeSetID, paa.AddressPriorityOrder)
             IN (SELECT PersonId, AddressTypeCodeSetID, MIN(AddressPriorityOrder)
                 FROM PersonAddressAssoc GROUP BY PersonId, AddressTypeCodeSetID))
  )
SELECT
  s.Dcid As studentDcid,
  s.Enroll_Status AS enrollStat,
  s.Student_Number AS studentNum,
  s.Last_Name AS lname,
  s.First_Name AS fname,
  psc.Email AS studentEmail,
  s.Gender AS gender,
  s.SchoolID AS schoolNum,
  s.Grade_Level AS gradeLvl,
  s.Home_room AS homeRm,
  s.Home_Phone AS studentHomePhone,
  s.Street AS studentAddrStreet,
  s.City AS studentAddrCity,
  s.State AS studentAddrState,
  s.Zip as studentAddrZip,
  s.Mailing_Street AS studentMailAddrStreet,
  s.Mailing_City AS studentMailAddrCity,
  s.Mailing_State AS studentMailAddrState,
  s.Mailing_Zip as studentMailAddrZip,

  oca_m1.contactRelationshipType AS contactRelationshipType, 
  oca_m1.contactIsCustodialFlg AS contactIsCustodialFlg,
  oca_m1.contactIsEmergencyFlg AS contactIsEmergencyFlg,
  oca_m1.contactLivesWithFlg AS contactLivesWithFlg,
  oca_m1.contactReceivesMailFlg AS contactReceivesMailFlg,
  oca_m1.contactSchoolPickupFlg AS contactSchoolPickupFlg,

  ci_m1.contactFirstName AS contactFirstName,
  ci_m1.contactMiddleName AS contactMiddleName,
  ci_m1.contactLastName AS contactLastName,
  oca_m1.OriginalContactType AS contactType,
  ci_m1.phoneType AS phoneType,
  ci_m1.contactPhoneNum AS contactPhoneNum,
  ci_m1.PhoneNumberPriorityOrder,
  ci_m1.emailType AS emailType,
  ci_m1.contactEmailAddr AS contactEmailAddr,
  ci_m1.EmailAddressPriorityOrder,
  ci_m1.IsPrimaryEmailAddress,
  ci_m1.contactAddrStreet AS contactAddrStreet,
  ci_m1.contactAddrUnit AS contactAddrUnit,
  ci_m1.contactAddrLineTwo AS contactAddrLineTwo,
  ci_m1.contactAddrCity AS contactAddrCity,
  ci_m1.contactAddrState AS contactAddrState,
  ci_m1.contactAddrPostalCode as contactAddrPostalCode

FROM Students s

LEFT OUTER JOIN 
  ( PSM_StudentContact psc 
  
    INNER JOIN PSM_StudentContactType psct
            ON psc.StudentContactTypeId= psct.Id 
           AND psct.Name='Self' 
  
    INNER JOIN Sync_StudentMap ssm ON psc.StudentId = ssm.StudentId
    
  ) ON s.Dcid = ssm.StudentsDcid 

LEFT OUTER JOIN
  ( OriginalContactAssoc oca_m1

    INNER JOIN  ContactInfo ci_m1 ON oca_m1.PersonId = ci_m1.PersonId

  ) ON s.Dcid = oca_m1.StudentDcid
   AND oca_m1.OriginalContactType LIKE 'mother'
